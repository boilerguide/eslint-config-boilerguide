<?xml version="1.0"?>
<ruleset name="Symfony2">
    <config name="installed_paths" value="../../../vendor/escapestudios/symfony2-coding-standard,../../../HolmesMedia,../../../vendor/holmesmedia/quality-tools,../../../vendor/slevomat/coding-standard"/>
    <description>Sniffs for Symfony coding standard</description>
    <exclude-pattern>*/tests/*</exclude-pattern>
    <exclude-pattern>*/docs/*</exclude-pattern>
    <exclude-pattern>*/.git/*</exclude-pattern>
    <exclude-pattern>*.js</exclude-pattern>
    <exclude-pattern>*.css</exclude-pattern>
    <exclude-pattern>*/public/*</exclude-pattern>
    <exclude-pattern>*/.idea/*</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>

    <rule ref="PSR12"/>
    <rule ref="HolmesMedia"/>
    <rule ref="SlevomatCodingStandard">
        <exclude name="SlevomatCodingStandard.Commenting.UselessInheritDocComment" />
        <exclude name="SlevomatCodingStandard.Commenting.DocCommentSpacing" />
        <exclude name="SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment" />
         <!--<exclude name="SlevomatCodingStandard.TypeHints.TypeHintDeclaration.UselessDocComment" />-->
        <exclude name="SlevomatCodingStandard.Classes.EmptyLinesAroundClassBraces" />
        <exclude name="SlevomatCodingStandard.ControlStructures" />
        <exclude name="SlevomatCodingStandard.Files" />
        <exclude name="SlevomatCodingStandard.Namespaces" />
        <exclude name="SlevomatCodingStandard.Operators" />
        <exclude name="SlevomatCodingStandard.TypeHints.DisallowArrayTypeHintSyntax" />
        <exclude name="SlevomatCodingStandard.Commenting.RequireOneLineDocComment.MultiLineDocComment" />
        <exclude name="SlevomatCodingStandard.Whitespaces.DuplicateSpaces.DuplicateSpaces" />
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming.SuperfluousSuffix" />
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming.SuperfluousPrefix" />
        <exclude name="SlevomatCodingStandard.Arrays.DisallowImplicitArrayCreation.ImplicitArrayCreationUsed" />
        <exclude name="SlevomatCodingStandard.Functions.StrictCall.StrictParameterMissing" />
        <exclude name="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification" />
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousExceptionNaming.SuperfluousSuffix" />
        <exclude name="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification" />
        <exclude name="SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingTraversableTypeHintSpecification" />
    </rule>
    <rule ref="Generic.ControlStructures.InlineControlStructure"/>
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.PHP.LowerCaseConstant"/>
    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
    <rule ref="Squiz.ControlStructures.ControlSignature"/>
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.Scope.MemberVarScope"/>

    <!--<rule ref="Squiz.Commenting.FunctionComment" />-->
    <!--<rule ref="Squiz.Commenting.FunctionCommentThrowTag" />-->
    <!--<rule ref="Squiz.Commenting.ClassComment" />-->
    <!--<rule ref="Squiz.Commenting.FileComment" />-->
    <!--<rule ref="Squiz.Commenting.VariableComment" />-->
    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="ignoreNewlines" value="1"/>
            <property name="spacing" value="1"/>
        </properties>
    </rule>

    <rule ref="Symfony">
        <exclude name="PEAR.Commenting.ClassComment"/>
        <exclude name="Symfony.Arrays"/>
        <exclude name="Symfony.Classes"/>
        <!--<exclude name="Symfony.Commenting"/>-->
        <exclude name="Symfony.Commenting.License"/>
        <exclude name="Symfony.Commenting.ClassComment"/>
        <exclude name="Symfony.Commenting.FunctionComment"/>
        <exclude name="Symfony.ControlStructure"/>
        <exclude name="Symfony.Errors"/>
        <exclude name="Symfony.Files"/>
        <exclude name="Symfony.Formatting"/>
        <exclude name="Symfony.Functions"/>
        <exclude name="Symfony.NamingConventions"/>
        <exclude name="Symfony.Objects"/>
        <exclude name="Symfony.Whitespace"/>
        <exclude name="Symfony.Commenting.Annotations.Invalid"/>
    </rule>

    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="170" />
            <property name="absoluteLineLimit" value="170" />
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
        <properties>
            <property name="newlinesCountBetweenOpenTagAndDeclare" type="integer" value="2"/>
            <property name="spacesCountAroundEqualsSign" type="integer" value="0"/>
        </properties>
    </rule>

    <!--<rule ref="SlevomatCodingStandard.TypeHints.TypeHintDeclaration">
        <properties>
            <property name="allAnnotationsAreUseful" type="bool" value="true"/>
        </properties>
    </rule>-->

    <rule ref="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket">
        <severity>0</severity>
    </rule>

    <rule ref="PEAR.Commenting.ClassComment">
        <severity>0</severity>
    </rule>

    <rule ref="PEAR.Functions.FunctionCallSignature.SpaceAfterCloseBracket">
        <severity>0</severity>
    </rule>

    <rule ref="PEAR.Functions.FunctionCallSignature.CloseBracketLine">
        <severity>0</severity>
    </rule>

    <rule ref="PSR2.ControlStructures.ControlStructureSpacing.SpacingAfterOpenBrace">
        <severity>0</severity>
    </rule>
</ruleset>
